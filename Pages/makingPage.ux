<Page ux:Class="makingPage">
	<Router ux:Dependency="router" />

    <JavaScript>
        var Observable = require('FuseJS/Observable');
        var Backend = require("Backend");

        var address = {
                sido: Observable("시도"),
                sgk: Observable("시군구"),
                emd: Observable("읍면동"),
                data1: Observable(),
                data2: Observable(),
                data3: Observable()
            };

       function fetchJson(url) {
            var req = new Request(url);
            return fetch(req, {mode: "GET"}).then(function(response) {
                    return Backend.parsingXMLData(response._bodyInit);
                }).catch(function(error) {
                    console.log(JSON.stringify(error));
                    console.log("fetch request error :(");
                });
        }

//        getSido();

        function selectSido(arg) {
            if (address.sido.value != arg.data) {
                address.sgk.replaceAll(["시군구"]);
                address.emd.replaceAll(["읍면동"]);
            }

            address.sido.value = arg.data;
            address.data1.clear();

            getSgk();
        }
        //시도 구역 받아오기
        function getSido() {
            var url = 'http://openapi.onbid.co.kr/openapi/services/OnbidCodeInfoInquireSvc/getOnbidAddr1Info?ServiceKey=LEVQhgclvGUKoC%2BJrvokKajzK6OsTFRinprds4qBzZj1PJMDZUQ8SRTm0lmzbj1jzC9IaZLqEm1G%2FhAdHV5R5A%3D%3D';

            fetchJson(url).then(function(responseObject) {
                responseObject.response.body.items.forEach(function(item) {
                    address.data1.add(item.item.ADDR1);
                })

                if(responseObject.response.body.totalCount > 10) {
                    url += '&pageNo=';
                    for (var i = 2 ; (i-1)*10 <= responseObject.response.body.totalCount ; i++) {
                            fetchJson(url+i).then(function(responseObject) {
                                responseObject.response.body.items.forEach(function(item) {
                                    address.data1.add(item.item.ADDR1);
                                });
                            });
                        }
                }
                address.data1.removeRange(0, 1);
            })

            if (address.data1.length == 0) {
/*                code.value.response.body.items.forEach(function(item) {
                    address.data1.add(item.item.ADDR1);
                })

                if(code.value.response.body.totalCount > 10) {
                    url += '&pageNo=';
                    for (var i = 2 ; (i-1)*10 <= code.value.response.body.totalCount ; i++) {
                            code.value = fetchJson(url+i);
                            code.value.response.body.items.forEach(function(item) {
                                address.data1.add(item.item.ADDR1);
                            });
                        }
                }*/
/*                fetch(url, {
                    method: 'POST'
                }).then(function(response) {
                    code.value = Backend.parsingXMLData(response._bodyInit);
                    code.value.response.body.items.forEach(function(item) {
                        address.data1.add(item.item.ADDR1);
                    })
                    if (code.value.response.body.totalCount > 10) {
                        url = url + '&pageNo=';
                        for (var i = 2 ; (i-1)*10 <= code.value.response.body.totalCount ; i++) {
                            fetch(url+i, {
                                method: 'POST'
                            }).then(function(response) {
                                code.value = Backend.parsingXMLData(response._bodyInit);
                                code.value.response.body.items.forEach(function(item) {
                                    address.data1.add(item.item.ADDR1);
                                })
                            });
                        }
                    }
                    address.data1.removeRange(0, 1);
                }); */
            }
        }
        //시군구 구역 선택
        function selectSgk(arg) {
            if (address.sgk.value != arg.data) {
                address.emd.replaceAll(["읍면동"]);
            }

            address.sgk.value = arg.data;
            address.data2.clear();

            getEmd();
        }
        //시군구 구역 받아오기
        function getSgk() {
            if (address.sido.value != "시도") {
                var url = 'http://openapi.onbid.co.kr/openapi/services/OnbidCodeInfoInquireSvc/getOnbidAddr2Info?ServiceKey=LEVQhgclvGUKoC%2BJrvokKajzK6OsTFRinprds4qBzZj1PJMDZUQ8SRTm0lmzbj1jzC9IaZLqEm1G%2FhAdHV5R5A%3D%3D&ADDR1='+address.sido.value;


                fetchJson(url).then(function(responseObject) {
                    responseObject = responseObject;
                    responseObject.response.body.items.forEach(function(item) {
                        address.data2.add(item.item.ADDR2);
                    })

                    if(responseObject.response.body.totalCount > 10) {
                        url += '&pageNo=';
                        for (var i = 2 ; (i-1)*10 <= responseObject.response.body.totalCount ; i++) {
                                fetchJson(url+i).then(function(responseObject) {
                                    responseObject.response.body.items.forEach(function(item) {
                                        address.data2.add(item.item.ADDR1);
                                    });
                                });
                            }
                    }
                })
/*                if (address.data2.length == 0) {
                    fetch(url, {
                        method: 'POST'
                    }).then(function(response) {
                        code.value = Backend.parsingXMLData(response._bodyInit);
                        code.value.response.body.items.forEach(function(item) {
                            address.data2.add(item.item.ADDR2);
                        })
                        if (code.value.response.body.totalCount > 10) {
                            url = url + '&pageNo=';
                            for (var i = 2 ; (i-1)*10 <= code.value.response.body.totalCount ; i++) {
                                fetch(url+i, {
                                    method: 'POST'
                                }).then(function(response) {
                                    code.value = Backend.parsingXMLData(response._bodyInit);
                                    code.value.response.body.items.forEach(function(item) {
                                        address.data2.add(item.item.ADDR2);
                                    })
                                });
                            }
                        }
                    }).catch(function(error) {
                        console.log(JSON.stringify(error));
                    });
                }*/
            }
        }
        //읍면동 구역 선택
        function selectEmd(arg) {
            address.emd.value = arg.data;
            address.data3.clear();
        }
        //읍면동 구역 받아오기
        function getEmd() {
            if (address.sgk.value != "시군구") {
                var code = Observable();
                var url = 'http://openapi.onbid.co.kr/openapi/services/OnbidCodeInfoInquireSvc/getOnbidAddr3Info?ServiceKey=LEVQhgclvGUKoC%2BJrvokKajzK6OsTFRinprds4qBzZj1PJMDZUQ8SRTm0lmzbj1jzC9IaZLqEm1G%2FhAdHV5R5A%3D%3D&ADDR2='+address.sgk.value;

/*                if (address.data3.length == 0) {
                    fetch(url, {
                        method: 'POST'
                    }).then(function(response) {
                        code.value = Backend.parsingXMLData(response._bodyInit);
                        code.value.response.body.items.forEach(function(item) {
                            address.data3.add(item.item.ADDR3);
                        })
                        if (code.value.response.body.totalCount > 10) {
                            url = url + '&pageNo=';
                            for (var i = 2 ; (i-1)*10 <= code.value.response.body.totalCount ; i++) {
                                fetch(url+i, {
                                    method: 'POST'
                                }).then(function(response) {
                                    code.value = Backend.parsingXMLData(response._bodyInit);
                                    code.value.response.body.items.forEach(function(item) {
                                        address.data3.add(item.item.ADDR3);
                                    })
                                });
                            }
                        }
                    }).catch(function(error) {
                        console.log(JSON.stringify(error));
                    });
                }*/
            }
        }

        module.exports = { address, getSido, getSgk, getEmd, selectSido, selectSgk, selectEmd,
            goBack: function() {
                router.goBack();
            }
        };
    </JavaScript>

    <StackPanel>
        <WrapPanel>
            <Text Font="han" Value="소재지 : " Alignment="Center" />
            <selectBox>
                <selectText Value="{address.sido}" Clicked="{getSido}" TextWrapping="Wrap" />
            </selectBox>

            <selectBox>
                <selectText Value="{address.sgk}" Clicked="{getSgk}" TextWrapping="Wrap" />
            </selectBox>

            <selectBox>
                <selectText Value="{address.emd}" Clicked="{getEmd}" TextWrapping="Wrap" />
            </selectBox>
        </WrapPanel>

        <ScrollView>
            <Rectangle Width="80%" Color="#fff" CornerRadius="4">
                <Stroke Width="1" Color="Black" />

                <StackPanel>
                    <Each Items="{address.data1}">
                        <selectText Value="{}" Clicked="{selectSido}" Alignment="Center" />
                    </Each>

                    <Each Items="{address.data2}">
                        <selectText Value="{}" Clicked="{selectSgk}" Alignment="Center" />
                    </Each>

                    <Each Items="{address.data3}">
                        <selectText Value="{}" Clicked="{selectEmd}" Alignment="Center" />
                    </Each>
                </StackPanel>
            </Rectangle>
        </ScrollView>
        <Button Text="Back" Clicked="{goBack}" />
    </StackPanel>

</Page>